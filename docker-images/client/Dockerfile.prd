###############################################################################
#--------------------------    DEVELOPMENT STAGE   ---------------------------#
###############################################################################

#-----------------------------------------------------------------------------#
# Pull and rename base image
ARG ARG_BASE_IMAGE_DEV_VERSIOM
FROM druzabni/node-base:$ARG_BASE_IMAGE_DEV_VERSIOM AS dev

#-----------------------------------------------------------------------------#
# Build develop image
FROM dev AS final

COPY . ./
RUN set -ex \
    # print npm and node version
    && npm -v \
    && node -v \
    # Create node_modules folder
    && mkdir node_modules \
    # install dependency packages
    && npm install --development \
    # build project
    && npm run build --fail-on-error --production \
    # print location and content of it
    && pwd \
    && ls -lah

ENTRYPOINT ["/sbin/tini", "--"]
EXPOSE 3000
CMD ["npm", "run", "preview", "--production", "--port", "3000"]

FROM nginx:stable-alpine AS nginx
COPY --from=final /workspace/dist-app /usr/share/nginx/html-app
COPY ./docker-images/client/nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
